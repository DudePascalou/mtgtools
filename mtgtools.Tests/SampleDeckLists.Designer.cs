//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mtgtools.Tests {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SampleDeckLists {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SampleDeckLists() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mtgtools.Tests.SampleDeckLists", typeof(SampleDeckLists).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 1 Nissa, Steward of Elements
        ///
        ///1 Bane of Bala Ged
        ///1 Deceiver of Form
        ///1 Conduit of Ruin
        ///3 Endbringer
        ///1 Deepfathom Skulker
        ///1 Thought-Knot Seer
        ///4 Elvish Spirit Guide
        ///3 Void Grafter
        ///4 Magus of the Library
        ///1 Desolation Twin
        ///4 Llanowar Elves
        ///4 Prophet of Distortion
        ///
        ///1 Hedron Archive
        ///4 Pulse of Murasa
        ///3 Spatial Contortion
        ///3 Worldly Tutor
        ///2 Lotus Petal
        ///
        ///5 Island
        ///9 Forest
        ///3 Ghost Quarter
        ///3 Mishra&apos;s Factory
        ///1 Spawning Bed
        ///1 Unclaimed Territory
        ///
        ///SB: 1 Hedron Crawler
        ///SB: 1 Elvish Mystic
        ///SB: 1 Salvage Drone
        ///SB: 3 Wastes.
        /// </summary>
        internal static string Desolation {
            get {
                return ResourceManager.GetString("Desolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 1 Spring // Mind.
        /// </summary>
        internal static string SampleWithAftermathLayout {
            get {
                return ResourceManager.GetString("SampleWithAftermathLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // Arpenteurs
        ///1 Nissa, Steward of Elements
        ///// Créatures
        ///2 Elvish Mystic
        ///// Sorts
        ///3 Hedron Archive
        ///4 Pulse of Murasa
        ///5 Slip Through Space
        ///// Terrains
        ///6 Island
        ///7 Forest
        ///// SIDE DECK
        ///SB: 8 Hedron Crawler
        ///SB: 9 Wastes.
        /// </summary>
        internal static string SimpleSample {
            get {
                return ResourceManager.GetString("SimpleSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // NAME: [Deck Lotus Noir] Temur Energy
        ///// MAIN DECK (60)
        ///// Créatures (23)
        ///4 Glorybringer
        ///3 Bristling Hydra
        ///4 Whirler Virtuoso
        ///4 Rogue Refiner
        ///4 Longtusk Cub
        ///4 Servant of the Conduit
        ///// Sorts (15)
        ///1 Confiscation Coup
        ///1 Commit // Memory
        ///2 Essence Scatter
        ///4 Harnessed Lightning
        ///1 Abrade
        ///2 Magma Spray
        ///4 Attune with Aether
        ///// Terrains (22)
        ///1 Island
        ///2 Mountain
        ///4 Forest
        ///4 Rootbound Crag
        ///4 Aether Hub
        ///4 Botanical Sanctum
        ///3 Spirebluff Canal
        ///// SIDE DECK (15)
        ///SB: 1 Chandra, Torch of Defiance
        ///SB: 2 Torrential Gearhulk [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string TemurEnergy {
            get {
                return ResourceManager.GetString("TemurEnergy", resourceCulture);
            }
        }
    }
}
