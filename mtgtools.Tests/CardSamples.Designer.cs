//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mtgtools.Tests {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CardSamples {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CardSamples() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mtgtools.Tests.CardSamples", typeof(CardSamples).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Slawomir Maniak&quot;,
        ///	&quot;cmc&quot;: 0,
        ///	&quot;flavor&quot;: &quot;Each of these intricate mechanical petals stores enough power to supply all of Ghirapur, if only for a fleeting moment.&quot;,
        ///	&quot;id&quot;: &quot;918aa0f2704c7e02f33e0ea7087c219bdbe22d4a&quot;,
        ///	&quot;imageName&quot;: &quot;lotus petal&quot;,
        ///	&quot;layout&quot;: &quot;normal&quot;,
        ///	&quot;legalities&quot;: [
        ///	  {
        ///		&quot;format&quot;: &quot;Commander&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Legacy&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Tempest Block&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Vin [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonArtifact {
            get {
                return ResourceManager.GetString("JsonArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Wesley Burt&quot;,
        ///	&quot;cmc&quot;: 1,
        ///	&quot;colorIdentity&quot;: [
        ///	  &quot;G&quot;
        ///	],
        ///	&quot;colors&quot;: [
        ///	  &quot;Green&quot;
        ///	],
        ///	&quot;flavor&quot;: &quot;\&quot;Life grows everywhere. My kin merely find those places where it grows strongest.\&quot;\n—Nissa Revane&quot;,
        ///	&quot;foreignNames&quot;: [
        ///	  {
        ///		&quot;language&quot;: &quot;Chinese Simplified&quot;,
        ///		&quot;name&quot;: &quot;妖精秘教徒&quot;,
        ///		&quot;multiverseid&quot;: 383513
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;Chinese Traditional&quot;,
        ///		&quot;name&quot;: &quot;妖精秘教徒&quot;,
        ///		&quot;multiverseid&quot;: 383797
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;German&quot;,
        ///		&quot;name&quot;: &quot;Elfen-Mystiker&quot;,
        ///		&quot;multiverseid&quot;: [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonCreature {
            get {
                return ResourceManager.GetString("JsonCreature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Christine Choi&quot;,
        ///	&quot;cmc&quot;: 3,
        ///	&quot;colorIdentity&quot;: [
        ///	  &quot;R&quot;
        ///	],
        ///	&quot;colors&quot;: [
        ///	  &quot;Red&quot;
        ///	],
        ///	&quot;id&quot;: &quot;8f73d710a4397d4e809d862d192217afd5d3e75f&quot;,
        ///	&quot;imageName&quot;: &quot;blood moon&quot;,
        ///	&quot;layout&quot;: &quot;normal&quot;,
        ///	&quot;legalities&quot;: [
        ///	  {
        ///		&quot;format&quot;: &quot;Commander&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Legacy&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Modern&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Vintage&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  }
        ///	],
        ///	&quot;manaCost&quot;: &quot;{2}{R}&quot;,
        ///	&quot;mciNumber&quot;: &quot; [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonEnchantment {
            get {
                return ResourceManager.GetString("JsonEnchantment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Noah Bradley&quot;,
        ///	&quot;cmc&quot;: 1,
        ///	&quot;colorIdentity&quot;: [
        ///	  &quot;G&quot;
        ///	],
        ///	&quot;colors&quot;: [
        ///	  &quot;Green&quot;
        ///	],
        ///	&quot;flavor&quot;: &quot;\&quot;The prohibition of unnecessary tossing of the citizenry by giants shall also extend to spontaneous giants.\&quot;\n—Isperia&apos;s Edict, provision VII.789.2&quot;,
        ///	&quot;foreignNames&quot;: [
        ///	  {
        ///		&quot;language&quot;: &quot;Russian&quot;,
        ///		&quot;name&quot;: &quot;Исполинский Рост&quot;,
        ///		&quot;multiverseid&quot;: 355313
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;Chinese Traditional&quot;,
        ///		&quot;name&quot;: &quot;變巨術&quot;,
        ///		&quot;multiverseid&quot;: 355587
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;German&quot; [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonInstant {
            get {
                return ResourceManager.GetString("JsonInstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Howard Lyon&quot;,
        ///	&quot;cmc&quot;: 0,
        ///	&quot;id&quot;: &quot;47e1a5391bc529fd926be9f7237a6b99039d571c&quot;,
        ///	&quot;imageName&quot;: &quot;strip mine&quot;,
        ///	&quot;layout&quot;: &quot;normal&quot;,
        ///	&quot;legalities&quot;: [
        ///	  {
        ///		&quot;format&quot;: &quot;Commander&quot;,
        ///		&quot;legality&quot;: &quot;Legal&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Legacy&quot;,
        ///		&quot;legality&quot;: &quot;Banned&quot;
        ///	  },
        ///	  {
        ///		&quot;format&quot;: &quot;Vintage&quot;,
        ///		&quot;legality&quot;: &quot;Restricted&quot;
        ///	  }
        ///	],
        ///	&quot;mciNumber&quot;: &quot;43&quot;,
        ///	&quot;multiverseid&quot;: 409574,
        ///	&quot;name&quot;: &quot;Strip Mine&quot;,
        ///	&quot;number&quot;: &quot;43&quot;,
        ///	&quot;originalText&quot;: &quot;{T}: Add {C} to your mana pool.\n{T}, Sacrifice Str [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonLand {
            get {
                return ResourceManager.GetString("JsonLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Howard Lyon&quot;,
        ///	&quot;cmc&quot;: 2,
        ///	&quot;colorIdentity&quot;: [
        ///	  &quot;U&quot;,
        ///	  &quot;G&quot;
        ///	],
        ///	&quot;colors&quot;: [
        ///	  &quot;Blue&quot;,
        ///	  &quot;Green&quot;
        ///	],
        ///	&quot;foreignNames&quot;: [
        ///	  {
        ///		&quot;language&quot;: &quot;German&quot;,
        ///		&quot;name&quot;: &quot;Nissa, Hüterin der Elemente&quot;,
        ///		&quot;multiverseid&quot;: 427175
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;Spanish&quot;,
        ///		&quot;name&quot;: &quot;Nissa, encarnación de los elementos&quot;,
        ///		&quot;multiverseid&quot;: 427444
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;French&quot;,
        ///		&quot;name&quot;: &quot;Nissa, intendante des éléments&quot;,
        ///		&quot;multiverseid&quot;: 427713
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;Italian&quot;,
        ///		 [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonPlaneswalker {
            get {
                return ResourceManager.GetString("JsonPlaneswalker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {
        ///	&quot;artist&quot;: &quot;Raymond Swanland&quot;,
        ///	&quot;cmc&quot;: 1,
        ///	&quot;colorIdentity&quot;: [
        ///	  &quot;U&quot;
        ///	],
        ///	&quot;flavor&quot;: &quot;The Eldrazi twisted in a direction that had no name, and a frontal assault became a panicked rout.&quot;,
        ///	&quot;foreignNames&quot;: [
        ///	  {
        ///		&quot;language&quot;: &quot;Chinese Simplified&quot;,
        ///		&quot;name&quot;: &quot;滑越空间&quot;,
        ///		&quot;multiverseid&quot;: 407743
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;Chinese Traditional&quot;,
        ///		&quot;name&quot;: &quot;滑越空間&quot;,
        ///		&quot;multiverseid&quot;: 407929
        ///	  },
        ///	  {
        ///		&quot;language&quot;: &quot;German&quot;,
        ///		&quot;name&quot;: &quot;Durchschlüpfen&quot;,
        ///		&quot;multiverseid&quot;: 408115
        ///	  },
        ///	  {
        ///		&quot;lang [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string JsonSorcery {
            get {
                return ResourceManager.GetString("JsonSorcery", resourceCulture);
            }
        }
    }
}
